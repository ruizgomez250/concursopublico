// node_modules/bootstrap-autocomplete/dist/latest/bootstrap-autocomplete.js
!function(t) {
  var e = {};
  function s(i) {
    if (e[i])
      return e[i].exports;
    var o = e[i] = { i, l: false, exports: {} };
    return t[i].call(o.exports, o, o.exports, s), o.l = true, o.exports;
  }
  s.m = t, s.c = e, s.d = function(t2, e2, i) {
    s.o(t2, e2) || Object.defineProperty(t2, e2, { enumerable: true, get: i });
  }, s.r = function(t2) {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
  }, s.t = function(t2, e2) {
    if (1 & e2 && (t2 = s(t2)), 8 & e2)
      return t2;
    if (4 & e2 && "object" == typeof t2 && t2 && t2.__esModule)
      return t2;
    var i = /* @__PURE__ */ Object.create(null);
    if (s.r(i), Object.defineProperty(i, "default", { enumerable: true, value: t2 }), 2 & e2 && "string" != typeof t2)
      for (var o in t2)
        s.d(i, o, function(e3) {
          return t2[e3];
        }.bind(null, o));
    return i;
  }, s.n = function(t2) {
    var e2 = t2 && t2.__esModule ? function() {
      return t2.default;
    } : function() {
      return t2;
    };
    return s.d(e2, "a", e2), e2;
  }, s.o = function(t2, e2) {
    return Object.prototype.hasOwnProperty.call(t2, e2);
  }, s.p = "", s(s.s = 0);
}([function(t, e, s) {
  "use strict";
  s.r(e), s.d(e, "AutoComplete", function() {
    return a;
  });
  var i, o = (i = function(t2, e2) {
    return (i = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
      t3.__proto__ = e3;
    } || function(t3, e3) {
      for (var s2 in e3)
        e3.hasOwnProperty(s2) && (t3[s2] = e3[s2]);
    })(t2, e2);
  }, function(t2, e2) {
    function s2() {
      this.constructor = t2;
    }
    i(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (s2.prototype = e2.prototype, new s2());
  }), n = function(t2) {
    function e2(e3) {
      return t2.call(this, e3) || this;
    }
    return o(e2, t2), e2.prototype.getDefaults = function() {
      return { url: "", method: "get", queryKey: "q", extraData: {}, timeout: void 0, requestThrottling: 500 };
    }, e2.prototype.search = function(t3, e3) {
      var s2 = this;
      null != this.jqXHR && this.jqXHR.abort();
      var i2 = {};
      i2[this._settings.queryKey] = t3, $.extend(i2, this._settings.extraData), this.requestTID && window.clearTimeout(this.requestTID), this.requestTID = window.setTimeout(function() {
        s2.jqXHR = $.ajax(s2._settings.url, { method: s2._settings.method, data: i2, timeout: s2._settings.timeout }), s2.jqXHR.done(function(t4) {
          e3(t4);
        }), s2.jqXHR.fail(function(t4) {
          var e4;
          null === (e4 = s2._settings) || void 0 === e4 || e4.fail(t4);
        }), s2.jqXHR.always(function() {
          s2.jqXHR = null;
        });
      }, this._settings.requestThrottling);
    }, e2;
  }(function() {
    function t2(t3) {
      this._settings = $.extend(true, {}, this.getDefaults(), t3);
    }
    return t2.prototype.getDefaults = function() {
      return {};
    }, t2.prototype.getResults = function(t3, e2, s2) {
      return this.results;
    }, t2.prototype.search = function(t3, e2) {
      e2(this.getResults());
    }, t2;
  }()), r = function() {
    function t2(t3, e2, s2, i2) {
      this.initialized = false, this.shown = false, this.items = [], this.ddMouseover = false, this._$el = t3, this.formatItem = e2, this.autoSelect = s2, this.noResultsText = i2;
    }
    return t2.prototype.init = function() {
      var t3 = this, e2 = $.extend({}, this._$el.position(), { height: this._$el[0].offsetHeight });
      this._dd = $("<ul />"), this._dd.addClass("bootstrap-autocomplete dropdown-menu"), this._dd.insertAfter(this._$el), this._dd.css({ top: e2.top + this._$el.outerHeight(), left: e2.left, width: this._$el.outerWidth() }), this._dd.on("click", "li", function(e3) {
        var s2 = $(e3.currentTarget).data("item");
        t3.itemSelectedLaunchEvent(s2);
      }), this._dd.on("keyup", function(e3) {
        if (t3.shown) {
          switch (e3.which) {
            case 27:
              t3.hide(), t3._$el.focus();
          }
          return false;
        }
      }), this._dd.on("mouseenter", function(e3) {
        t3.ddMouseover = true;
      }), this._dd.on("mouseleave", function(e3) {
        t3.ddMouseover = false;
      }), this._dd.on("mouseenter", "li", function(e3) {
        t3.haveResults && ($(e3.currentTarget).closest("ul").find("li.active").removeClass("active"), $(e3.currentTarget).addClass("active"), t3.mouseover = true);
      }), this._dd.on("mouseleave", "li", function(e3) {
        t3.mouseover = false;
      }), this.initialized = true;
    }, t2.prototype.checkInitialized = function() {
      this.initialized || this.init();
    }, Object.defineProperty(t2.prototype, "isMouseOver", { get: function() {
      return this.mouseover;
    }, enumerable: false, configurable: true }), Object.defineProperty(t2.prototype, "isDdMouseOver", { get: function() {
      return this.ddMouseover;
    }, enumerable: false, configurable: true }), Object.defineProperty(t2.prototype, "haveResults", { get: function() {
      return this.items.length > 0;
    }, enumerable: false, configurable: true }), t2.prototype.focusNextItem = function(t3) {
      if (this.haveResults) {
        var e2 = this._dd.find("li.active"), s2 = t3 ? e2.prev() : e2.next();
        0 === s2.length && (s2 = t3 ? this._dd.find("li").last() : this._dd.find("li").first()), e2.removeClass("active"), s2.addClass("active");
      }
    }, t2.prototype.focusPreviousItem = function() {
      this.focusNextItem(true);
    }, t2.prototype.selectFocusItem = function() {
      this._dd.find("li.active").trigger("click");
    }, Object.defineProperty(t2.prototype, "isItemFocused", { get: function() {
      return !!(this.isShown() && this._dd.find("li.active").length > 0);
    }, enumerable: false, configurable: true }), t2.prototype.show = function() {
      this.shown || (this._dd.dropdown().show(), this.shown = true);
    }, t2.prototype.isShown = function() {
      return this.shown;
    }, t2.prototype.hide = function() {
      this.shown && (this._dd.dropdown().hide(), this.shown = false);
    }, t2.prototype.updateItems = function(t3, e2) {
      this.items = t3, this.searchText = e2, this.refreshItemList();
    }, t2.prototype.showMatchedText = function(t3, e2) {
      var s2 = t3.toLowerCase().indexOf(e2.toLowerCase());
      if (s2 > -1) {
        var i2 = s2 + e2.length;
        return t3.slice(0, s2) + "<b>" + t3.slice(s2, i2) + "</b>" + t3.slice(i2);
      }
      return t3;
    }, t2.prototype.refreshItemList = function() {
      var t3 = this;
      this.checkInitialized(), this._dd.empty();
      var e2 = [];
      if (this.items.length > 0)
        this.items.forEach(function(s3) {
          var i2, o2, n2 = t3.formatItem(s3);
          "string" == typeof n2 && (n2 = { text: n2 }), i2 = t3.showMatchedText(n2.text, t3.searchText), o2 = void 0 !== n2.html ? n2.html : i2;
          var r2 = n2.disabled, l2 = $("<li >");
          l2.append($("<a>").attr("href", "#!").html(o2)).data("item", s3), r2 && l2.addClass("disabled"), e2.push(l2);
        });
      else {
        var s2 = $("<li >");
        s2.append($("<a>").attr("href", "#!").html(this.noResultsText)).addClass("disabled"), e2.push(s2);
      }
      this._dd.append(e2);
    }, t2.prototype.itemSelectedLaunchEvent = function(t3) {
      this._$el.trigger("autocomplete.select", t3);
    }, t2;
  }(), l = function() {
    function t2(t3, e2, s2, i2) {
      this.initialized = false, this.shown = false, this.items = [], this.ddMouseover = false, this._$el = t3, this.formatItem = e2, this.autoSelect = s2, this.noResultsText = i2;
    }
    return t2.prototype.getElPos = function() {
      return $.extend({}, this._$el.position(), { height: this._$el[0].offsetHeight });
    }, t2.prototype.init = function() {
      var t3 = this, e2 = this.getElPos();
      this._dd = $("<div />"), this._dd.addClass("bootstrap-autocomplete dropdown-menu"), this._dd.insertAfter(this._$el), this._dd.css({ top: e2.top + this._$el.outerHeight(), left: e2.left, width: this._$el.outerWidth() }), this._dd.on("click", ".dropdown-item", function(e3) {
        var s2 = $(e3.currentTarget).data("item");
        t3.itemSelectedLaunchEvent(s2), e3.preventDefault();
      }), this._dd.on("keyup", function(e3) {
        if (t3.shown) {
          switch (e3.which) {
            case 27:
              t3.hide(), t3._$el.focus();
          }
          return false;
        }
      }), this._dd.on("mouseenter", function(e3) {
        t3.ddMouseover = true;
      }), this._dd.on("mouseleave", function(e3) {
        t3.ddMouseover = false;
      }), this._dd.on("mouseenter", ".dropdown-item", function(e3) {
        t3.haveResults && ($(e3.currentTarget).closest("div").find(".dropdown-item.active").removeClass("active"), $(e3.currentTarget).addClass("active"), t3.mouseover = true);
      }), this._dd.on("mouseleave", ".dropdown-item", function(e3) {
        t3.mouseover = false;
      }), this.initialized = true;
    }, t2.prototype.checkInitialized = function() {
      this.initialized || this.init();
    }, Object.defineProperty(t2.prototype, "isMouseOver", { get: function() {
      return this.mouseover;
    }, enumerable: false, configurable: true }), Object.defineProperty(t2.prototype, "isDdMouseOver", { get: function() {
      return this.ddMouseover;
    }, enumerable: false, configurable: true }), Object.defineProperty(t2.prototype, "haveResults", { get: function() {
      return this.items.length > 0;
    }, enumerable: false, configurable: true }), t2.prototype.focusNextItem = function(t3) {
      if (this.haveResults) {
        var e2 = this._dd.find(".dropdown-item.active"), s2 = t3 ? e2.prev() : e2.next();
        0 === s2.length && (s2 = t3 ? this._dd.find(".dropdown-item").last() : this._dd.find(".dropdown-item").first()), e2.removeClass("active"), s2.addClass("active");
      }
    }, t2.prototype.focusPreviousItem = function() {
      this.focusNextItem(true);
    }, t2.prototype.selectFocusItem = function() {
      this._dd.find(".dropdown-item.active").trigger("click");
    }, Object.defineProperty(t2.prototype, "isItemFocused", { get: function() {
      return !!(this._dd && this.isShown() && this._dd.find(".dropdown-item.active").length > 0);
    }, enumerable: false, configurable: true }), t2.prototype.show = function() {
      if (!this.shown) {
        this.getElPos();
        this._dd.addClass("show"), this.shown = true, this._$el.trigger("autocomplete.dd.shown");
      }
    }, t2.prototype.isShown = function() {
      return this.shown;
    }, t2.prototype.hide = function() {
      this.shown && (this._dd.removeClass("show"), this.shown = false, this._$el.trigger("autocomplete.dd.hidden"));
    }, t2.prototype.updateItems = function(t3, e2) {
      this.items = t3, this.searchText = e2, this.refreshItemList();
    }, t2.prototype.showMatchedText = function(t3, e2) {
      var s2 = t3.toLowerCase().indexOf(e2.toLowerCase());
      if (s2 > -1) {
        var i2 = s2 + e2.length;
        return t3.slice(0, s2) + "<b>" + t3.slice(s2, i2) + "</b>" + t3.slice(i2);
      }
      return t3;
    }, t2.prototype.refreshItemList = function() {
      var t3 = this;
      this.checkInitialized(), this._dd.empty();
      var e2 = [];
      if (this.items.length > 0)
        this.items.forEach(function(s3) {
          var i2, o2, n2 = t3.formatItem(s3);
          "string" == typeof n2 && (n2 = { text: n2 }), i2 = t3.showMatchedText(n2.text, t3.searchText), o2 = void 0 !== n2.html ? n2.html : i2;
          var r2 = n2.disabled, l2 = $("<a >");
          l2.addClass("dropdown-item").css({ overflow: "hidden", "text-overflow": "ellipsis" }).html(o2).data("item", s3), r2 && l2.addClass("disabled"), e2.push(l2);
        }), this._dd.append(e2), this.show();
      else if ("" === this.noResultsText)
        this.hide();
      else {
        var s2 = $("<a >");
        s2.addClass("dropdown-item disabled").html(this.noResultsText), e2.push(s2), this._dd.append(e2), this.show();
      }
    }, t2.prototype.itemSelectedLaunchEvent = function(t3) {
      this._$el.trigger("autocomplete.select", t3);
    }, t2;
  }(), a = function() {
    function t2(t3, e2) {
      this._selectedItem = null, this._defaultValue = null, this._defaultText = null, this._isSelectElement = false, this._settings = { resolver: "ajax", resolverSettings: {}, minLength: 3, valueKey: "value", formatResult: this.defaultFormatResult, autoSelect: true, noResultsText: "No results", bootstrapVersion: "auto", preventEnter: false, events: { typed: null, searchPre: null, search: null, searchPost: null, select: null, focus: null } }, this._el = t3, this._$el = $(this._el), this._$el.is("select") && (this._isSelectElement = true), this.manageInlineDataAttributes(), "object" == typeof e2 && (this._settings = $.extend(true, {}, this.getSettings(), e2)), this._isSelectElement && this.convertSelectToText(), this.init();
    }
    return t2.prototype.manageInlineDataAttributes = function() {
      var t3 = this.getSettings();
      this._$el.data("url") && (t3.resolverSettings.url = this._$el.data("url")), this._$el.data("default-value") && (this._defaultValue = this._$el.data("default-value")), this._$el.data("default-text") && (this._defaultText = this._$el.data("default-text")), void 0 !== this._$el.data("noresults-text") && (t3.noResultsText = this._$el.data("noresults-text"));
    }, t2.prototype.getSettings = function() {
      return this._settings;
    }, t2.prototype.getBootstrapVersion = function() {
      var t3;
      "auto" === this._settings.bootstrapVersion ? t3 = $.fn.button.Constructor.VERSION.split(".").map(parseInt) : "4" === this._settings.bootstrapVersion ? t3 = [4] : "3" === this._settings.bootstrapVersion ? t3 = [3] : (console.error("INVALID value for 'bootstrapVersion' settings property: " + this._settings.bootstrapVersion + " defaulting to 4"), t3 = [4]);
      return t3;
    }, t2.prototype.convertSelectToText = function() {
      var e2 = $("<input>");
      e2.attr("type", "hidden"), e2.attr("name", this._$el.attr("name")), this._defaultValue && e2.val(this._defaultValue), this._selectHiddenField = e2, e2.insertAfter(this._$el);
      var s2 = $("<input>");
      s2.attr("type", "search"), s2.attr("name", this._$el.attr("name") + "_text"), s2.attr("id", this._$el.attr("id")), s2.attr("disabled", this._$el.attr("disabled")), s2.attr("placeholder", this._$el.attr("placeholder")), s2.attr("autocomplete", "off"), s2.addClass(this._$el.attr("class")), this._defaultText && s2.val(this._defaultText);
      var i2 = this._$el.attr("required");
      i2 && s2.attr("required", i2), s2.data(t2.NAME, this), this._$el.replaceWith(s2), this._$el = s2, this._el = s2.get(0);
    }, t2.prototype.init = function() {
      this.bindDefaultEventListeners(), "ajax" === this._settings.resolver && (this.resolver = new n(this._settings.resolverSettings)), 4 === this.getBootstrapVersion()[0] ? this._dd = new l(this._$el, this._settings.formatResult, this._settings.autoSelect, this._settings.noResultsText) : this._dd = new r(this._$el, this._settings.formatResult, this._settings.autoSelect, this._settings.noResultsText);
    }, t2.prototype.bindDefaultEventListeners = function() {
      var t3 = this;
      this._$el.on("keydown", function(e2) {
        switch (e2.which) {
          case 9:
            t3._dd.isItemFocused ? t3._dd.selectFocusItem() : t3._selectedItem || "" !== t3._$el.val() && t3._$el.trigger("autocomplete.freevalue", t3._$el.val()), t3._dd.hide();
            break;
          case 13:
            t3._dd.isItemFocused ? t3._dd.selectFocusItem() : t3._selectedItem || "" !== t3._$el.val() && t3._$el.trigger("autocomplete.freevalue", t3._$el.val()), t3._dd.hide(), t3._settings.preventEnter && e2.preventDefault();
            break;
          case 40:
            t3._dd.focusNextItem();
            break;
          case 38:
            t3._dd.focusPreviousItem();
        }
      }), this._$el.on("keyup", function(e2) {
        switch (e2.which) {
          case 16:
          case 17:
          case 18:
          case 39:
          case 37:
          case 36:
          case 35:
            break;
          case 13:
          case 27:
            t3._dd.hide();
            break;
          case 40:
          case 38:
            break;
          default:
            t3._selectedItem = null;
            var s2 = t3._$el.val();
            t3.handlerTyped(s2);
        }
      }), this._$el.on("blur", function(e2) {
        !t3._dd.isMouseOver && t3._dd.isDdMouseOver && t3._dd.isShown() ? (setTimeout(function() {
          t3._$el.focus();
        }), t3._$el.focus()) : t3._dd.isMouseOver || (t3._isSelectElement ? t3._dd.isItemFocused ? t3._dd.selectFocusItem() : null !== t3._selectedItem && "" !== t3._$el.val() ? t3._$el.trigger("autocomplete.select", t3._selectedItem) : "" !== t3._$el.val() && null !== t3._defaultValue ? (t3._$el.val(t3._defaultText), t3._selectHiddenField.val(t3._defaultValue), t3._selectedItem = null, t3._$el.trigger("autocomplete.select", t3._selectedItem)) : (t3._$el.val(""), t3._selectHiddenField.val(""), t3._selectedItem = null, t3._$el.trigger("autocomplete.select", t3._selectedItem)) : null === t3._selectedItem && t3._$el.trigger("autocomplete.freevalue", t3._$el.val()), t3._dd.hide());
      }), this._$el.on("autocomplete.select", function(e2, s2) {
        t3._selectedItem = s2, t3.itemSelectedDefaultHandler(s2);
      }), this._$el.on("paste", function(e2) {
        setTimeout(function() {
          t3._$el.trigger("keyup", e2);
        }, 0);
      });
    }, t2.prototype.handlerTyped = function(t3) {
      (null === this._settings.events.typed || (t3 = this._settings.events.typed(t3, this._$el))) && (t3.length >= this._settings.minLength ? (this._searchText = t3, this.handlerPreSearch()) : this._dd.hide());
    }, t2.prototype.handlerPreSearch = function() {
      if (null !== this._settings.events.searchPre) {
        var t3 = this._settings.events.searchPre(this._searchText, this._$el);
        if (!t3)
          return;
        this._searchText = t3;
      }
      this.handlerDoSearch();
    }, t2.prototype.handlerDoSearch = function() {
      var t3 = this;
      null !== this._settings.events.search ? this._settings.events.search(this._searchText, function(e2) {
        t3.postSearchCallback(e2);
      }, this._$el) : this.resolver && this.resolver.search(this._searchText, function(e2) {
        t3.postSearchCallback(e2);
      });
    }, t2.prototype.postSearchCallback = function(t3) {
      this._settings.events.searchPost && "boolean" == typeof (t3 = this._settings.events.searchPost(t3, this._$el)) && !t3 || this.handlerStartShow(t3);
    }, t2.prototype.handlerStartShow = function(t3) {
      this._dd.updateItems(t3, this._searchText);
    }, t2.prototype.itemSelectedDefaultHandler = function(t3) {
      if (null != t3) {
        var e2 = this._settings.formatResult(t3);
        "string" == typeof e2 && (e2 = { text: e2 }), this._$el.val(e2.text), this._isSelectElement && this._selectHiddenField.val(e2.value);
      } else
        this._$el.val(""), this._isSelectElement && this._selectHiddenField.val("");
      this._selectedItem = t3, this._dd.hide();
    }, t2.prototype.defaultFormatResult = function(t3) {
      return "string" == typeof t3 ? { text: t3 } : t3.text ? t3 : { text: t3.toString() };
    }, t2.prototype.manageAPI = function(t3, e2) {
      "set" === t3 ? this.itemSelectedDefaultHandler(e2) : "clear" === t3 ? this.itemSelectedDefaultHandler(null) : "show" === t3 ? this._$el.trigger("keyup") : "updateResolver" === t3 && (this.resolver = new n(e2));
    }, t2.NAME = "autoComplete", t2;
  }();
  !function(t2, e2, s2) {
    t2.fn[a.NAME] = function(e3, s3) {
      return this.each(function() {
        var i2;
        (i2 = t2(this).data(a.NAME)) || (i2 = new a(this, e3), t2(this).data(a.NAME, i2)), i2.manageAPI(e3, s3);
      });
    };
  }(jQuery, window, document);
}]);
//# sourceMappingURL=bootstrap-autocomplete.js.map
